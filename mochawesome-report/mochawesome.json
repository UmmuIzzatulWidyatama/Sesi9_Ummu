{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-28T15:27:22.920Z",
    "end": "2025-06-28T15:27:27.464Z",
    "duration": 4544,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "75425500-305a-48da-81cb-b606d1569295",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "df5f3958-0982-47f8-87c9-c66bd1ee36c9",
          "title": "Sukses Login SauceDemo",
          "fullFile": "C:\\Users\\izzar\\Videos\\web automation\\Sesi9_Ummu\\tests\\test-login.js",
          "file": "\\tests\\test-login.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Sukses Login SauceDemo\"",
              "fullTitle": "Sukses Login SauceDemo \"before all\" hook in \"Sukses Login SauceDemo\"",
              "timedOut": false,
              "duration": 774,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\n//options.addArguments(\"--headless\"); //untuk mode headless\noptions.addArguments(\"--incognito\"); //untuk membuka incognito mode\ndriver = await new Builder().forBrowser('chrome').setChromeOptions(options).build();",
              "err": {},
              "uuid": "678a056f-e3b0-46cf-acd7-f8eefcca3b56",
              "parentUUID": "df5f3958-0982-47f8-87c9-c66bd1ee36c9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Sukses Login SauceDemo\"",
              "fullTitle": "Sukses Login SauceDemo \"after all\" hook in \"Sukses Login SauceDemo\"",
              "timedOut": false,
              "duration": 51,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "055b75c2-f284-4be3-bc15-8a2b3ac1d16b",
              "parentUUID": "df5f3958-0982-47f8-87c9-c66bd1ee36c9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Harus bisa login dengan kredensial yang valid",
              "fullTitle": "Sukses Login SauceDemo Harus bisa login dengan kredensial yang valid",
              "timedOut": false,
              "duration": 803,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('https://www.saucedemo.com/');\n// Isi form login\nconst inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'));\nconst inputPassword = await driver.findElement(By.css('[data-test=\"password\"]'));\nconst loginButton = await driver.findElement(By.css('[data-test=\"login-button\"]'));\nawait inputUsername.sendKeys('standard_user');\nawait inputPassword.sendKeys('secret_sauce');\nawait loginButton.click();\n// Verifikasi berhasil login dengan mengecek presence shopping cart\nconst cartButton = await driver.wait(\n    until.elementLocated(By.css('[data-test=\"shopping-cart-link\"]')),\n    10000,\n    'Cart button harus muncul setelah login'\n);\nassert(await cartButton.isDisplayed(), 'Cart button tidak terlihat, login gagal');\n// Verifikasi logo halaman\nconst appLogo = await driver.findElement(By.className('app_logo'));\nconst logoText = await appLogo.getText();\nassert.strictEqual(logoText, 'Swag Labs', 'Logo teks tidak sesuai');",
              "err": {},
              "uuid": "35f85276-5451-4e30-8e11-273b5e38cc4e",
              "parentUUID": "df5f3958-0982-47f8-87c9-c66bd1ee36c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35f85276-5451-4e30-8e11-273b5e38cc4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 803,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "f2e55c83-9612-45c2-a8a6-ab51e39c6a92",
          "title": "Sort Produk dari A-Z di SauceDemo",
          "fullFile": "C:\\Users\\izzar\\Videos\\web automation\\Sesi9_Ummu\\tests\\test-sort-produk.js",
          "file": "\\tests\\test-sort-produk.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Sort Produk dari A-Z di SauceDemo\"",
              "fullTitle": "Sort Produk dari A-Z di SauceDemo \"before all\" hook in \"Sort Produk dari A-Z di SauceDemo\"",
              "timedOut": false,
              "duration": 812,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\n//options.addArguments(\"--headless\"); //untuk mode headless\noptions.addArguments(\"--incognito\"); //untuk membuka incognito mode\ndriver = await new Builder().forBrowser('chrome').setChromeOptions(options).build();",
              "err": {},
              "uuid": "24607fd8-3652-4340-852d-524aeeebdfbe",
              "parentUUID": "f2e55c83-9612-45c2-a8a6-ab51e39c6a92",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Sort Produk dari A-Z di SauceDemo\"",
              "fullTitle": "Sort Produk dari A-Z di SauceDemo \"after all\" hook in \"Sort Produk dari A-Z di SauceDemo\"",
              "timedOut": false,
              "duration": 65,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "25f687b1-783b-457f-b055-4c13f293c026",
              "parentUUID": "f2e55c83-9612-45c2-a8a6-ab51e39c6a92",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login dan sort produk dari A-Z",
              "fullTitle": "Sort Produk dari A-Z di SauceDemo Login dan sort produk dari A-Z",
              "timedOut": false,
              "duration": 2032,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('https://www.saucedemo.com/');\n// Login\nawait driver.findElement(By.css('[data-test=\"username\"]')).sendKeys('standard_user');\nawait driver.findElement(By.css('[data-test=\"password\"]')).sendKeys('secret_sauce');\nawait driver.findElement(By.css('[data-test=\"login-button\"]')).click();\n// Tunggu halaman produk muncul\nawait driver.wait(until.elementLocated(By.className('inventory_list')), 10000);\n// Pilih filter \"Name (A to Z)\" secara eksplisit\nconst dropdown = await driver.findElement(By.css('[data-test=\"product-sort-container\"]'));\nawait dropdown.click(); // Buka dropdown\nconst optionAZ = await driver.findElement(By.css('option[value=\"az\"]'));\nawait optionAZ.click(); // Pilih A-Z\n// Tunggu sorting selesai (DOM re-render)\nawait driver.sleep(1000);\n// Ambil semua nama produk\nconst productElements = await driver.findElements(By.className('inventory_item_name'));\nconst productNames = [];\nfor (let el of productElements) {\n    productNames.push(await el.getText());\n}\n// Buat salinan lalu urutkan\nconst sortedNames = [...productNames].sort();\n// Debug (opsional)\nconsole.log(\"Produk tampil:\", productNames);\nconsole.log(\"Produk urut:\", sortedNames);\n// Verifikasi: urutan sudah A-Z\nassert.deepStrictEqual(productNames, sortedNames, 'Produk tidak terurut A-Z');",
              "err": {},
              "uuid": "dec5795a-7b5b-4164-bf7c-013fe009249a",
              "parentUUID": "f2e55c83-9612-45c2-a8a6-ab51e39c6a92",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dec5795a-7b5b-4164-bf7c-013fe009249a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2032,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}